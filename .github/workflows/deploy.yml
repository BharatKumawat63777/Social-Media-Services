name: Deploy to AWS EC2

on:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      
      - name: Checkout repository
        uses: actions/checkout@v2

     
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

     
      - name: Build and Push api-gateway
        run: |
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/api-gateway:latest
          docker build -t $IMAGE_URI ./api-gateway
          docker push $IMAGE_URI

      
      - name: Build and Push identity-service
        run: |
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/identity-service:latest
          docker build -t $IMAGE_URI ./identity-service
          docker push $IMAGE_URI

      
      - name: Build and Push post-service
        run: |
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/post-service:latest
          docker build -t $IMAGE_URI ./post-service
          docker push $IMAGE_URI

      
      - name: Build and Push media-service
        run: |
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/media-service:latest
          docker build -t $IMAGE_URI ./media-service
          docker push $IMAGE_URI

      
      - name: Build and Push search-service
        run: |
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/search-service:latest
          docker build -t $IMAGE_URI ./search-service
          docker push $IMAGE_URI

      
      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_EC2_SSH_KEY }}
          port: 22
          script: |
            cd ~/social-media-services  # make sure repo is cloned on EC2
            git pull origin master
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
              | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
            docker-compose pull
            docker-compose up -d --remove-orphans
